CREATE TABLE MyShow (
    id INTEGER,
    imdbId TEXT,
    tmdbId INTEGER AS Int,
    tvdbId INTEGER AS Int,
    facebookId TEXT,
    instagramId TEXT,
    twitterId TEXT,
    name TEXT NOT NULL,
    overview TEXT NOT NULL,
    year INTEGER as Int,
    imageUrl TEXT,
    isEnded INTEGER AS Boolean NOT NULL,
    nextEpisodeId INTEGER,
    PRIMARY KEY (id)
);

insert:
INSERT INTO MyShow(imdbId, tmdbId, tvdbId, facebookId, instagramId, twitterId, name, overview, year, imageUrl, isEnded, nextEpisodeId)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

deleteByTmdbId:
DELETE FROM MyShow WHERE tmdbId = ?;

selectAll:
SELECT *
FROM MyShow
LEFT JOIN NextEpisode ON NextEpisode.id = MyShow.nextEpisodeId;

isInMyShows:
SELECT count(*) > 0
FROM MyShow
WHERE tmdbId = ?;

upcomingShows:
SELECT MyShow.id, MyShow.name, NextEpisode.name, episodeNumber, seasonNumber, NextEpisode.airDateMillis, NextEpisode.imageUrl
FROM MyShow
INNER JOIN NextEpisode ON NextEpisode.id = MyShow.nextEpisodeId;

toBeAnnouncedShows:
SELECT id, name, imageUrl
FROM MyShow
WHERE isEnded = 0 AND nextEpisodeId IS NULL;

endedShows:
SELECT id, name, imageUrl
FROM MyShow
WHERE isEnded = 1;
