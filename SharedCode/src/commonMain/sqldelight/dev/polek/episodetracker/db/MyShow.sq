CREATE TABLE MyShow (
    tmdbId INTEGER AS Int NOT NULL,
    imdbId TEXT,
    tvdbId INTEGER AS Int,
    facebookId TEXT,
    instagramId TEXT,
    twitterId TEXT,
    name TEXT NOT NULL,
    overview TEXT NOT NULL,
    year INTEGER as Int,
    imageUrl TEXT,
    isEnded INTEGER AS Boolean NOT NULL,
    nextEpisodeId INTEGER,

    PRIMARY KEY (tmdbId)
);

insert:
INSERT INTO MyShow(imdbId, tmdbId, tvdbId, facebookId, instagramId, twitterId, name, overview, year, imageUrl, isEnded, nextEpisodeId)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

deleteByTmdbId:
DELETE FROM MyShow WHERE tmdbId = ?;

isInMyShows:
SELECT count(*) > 0
FROM MyShow
WHERE tmdbId = ?;

upcomingShows:
SELECT MyShow.name, Episode.name, episodeNumber, seasonNumber, Episode.airDateMillis, Episode.imageUrl
FROM MyShow
INNER JOIN Episode ON Episode.id = MyShow.nextEpisodeId;

toBeAnnouncedShows:
SELECT name, imageUrl
FROM MyShow
WHERE isEnded = 0 AND nextEpisodeId IS NULL;

endedShows:
SELECT name, imageUrl
FROM MyShow
WHERE isEnded = 1;

toWatchShows:
SELECT MyShow.tmdbId, MyShow.name, Episode.id, Episode.seasonNumber, Episode.episodeNumber, Episode.name, Episode.imageUrl, NotWatchedEpisodes.count
FROM MyShow
INNER JOIN (
        SELECT showTmdbId, count(*) AS count, min(10000 * seasonNumber + episodeNumber) AS firstNotWatchedEpisodeIndex
        FROM Episode
        WHERE isWatched = 0
        GROUP BY showTmdbId
    ) AS NotWatchedEpisodes ON NotWatchedEpisodes.showTmdbId = MyShow.tmdbId
INNER JOIN Episode ON Episode.showTmdbId = NotWatchedEpisodes.showTmdbId AND (10000 * Episode.seasonNumber + Episode.episodeNumber) = NotWatchedEpisodes.firstNotWatchedEpisodeIndex;

toWatchShow:
SELECT MyShow.tmdbId, MyShow.name, Episode.id, Episode.seasonNumber, Episode.episodeNumber, Episode.name, Episode.imageUrl, NotWatchedEpisodes.count
FROM MyShow
INNER JOIN (
        SELECT showTmdbId, count(*) AS count, min(10000 * seasonNumber + episodeNumber) AS firstNotWatchedEpisodeIndex
        FROM Episode
        WHERE isWatched = 0
        GROUP BY showTmdbId
    ) AS NotWatchedEpisodes ON NotWatchedEpisodes.showTmdbId = MyShow.tmdbId
INNER JOIN Episode ON Episode.showTmdbId = NotWatchedEpisodes.showTmdbId AND (10000 * Episode.seasonNumber + Episode.episodeNumber) = NotWatchedEpisodes.firstNotWatchedEpisodeIndex
WHERE MyShow.tmdbId = ?;
